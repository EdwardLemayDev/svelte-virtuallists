import{ALIGNMENT,type VirtualItemSize,type VirtualRange,type VirtualPosition}from'.';export default class SizeAndPositionManager{private items;private itemSize;private itemCount;private estimatedItemSize?;private itemSizeAndPositionData;private lastMeasuredIndex;private totalSize?;constructor(items:Array<any>,itemSize:VirtualItemSize,itemCount:number,estimatedItemSize?:number);get justInTime():boolean;updateConfig(itemSize:VirtualItemSize,itemCount:number,estimatedItemSize?:number):void;checkForMismatchItemSizeAndItemCount():void;getSize(index:number):number;computeTotalSizeAndPositionData():void;getLastMeasuredIndex():number;getSizeAndPositionForIndex(index:number):VirtualPosition;getJustInTimeSizeAndPositionForIndex(index:number):VirtualPosition;getSizeAndPositionOfLastMeasuredItem():VirtualPosition;getEstimatedItemSize():number;getTotalSize():number;getUpdatedOffsetForIndex(align:ALIGNMENT|undefined,containerSize:number,currentOffset:number,targetIndex:number):number;getVisibleRange(containerSize:number|undefined,offset:number,windowOverPadding:number):VirtualRange;resetItem(index:number):void;findNearestItem(offset:number):number;private binarySearch;private exponentialSearch;}